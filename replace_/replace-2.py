#!/usr/bin/python
# -*- coding: UTF-8 -*-

from tkinter import filedialog, messagebox
import os.path
import re

'''
This code is writen by DuHua
The main function of the program is to add the MCND file generated by MCCAD to the original model file 
2018-6-24
'''
def MCCAD_to_MCNP(origin_MCNP_file, MCCAD_file, origin_start_mark, MCCAD_start_mark, MCCAD_end_mark):   
    # origin_MCNP_file is origin MCNP files
    # MCCAD_file is MCADfiles
    # origin_start_mark is start mark in origin MCNP files
    # MCCAD_start_mark is start mark in origin MCCAD files
    # MCCAD_end_mark is end mark in origin MCCAD files
    
    origin_start_compile_mark=re.compile(r'(.*)%s(.*)'% origin_start_mark) # Regular expression  
    # Find the corresponding location
    origin_start_pos=origin_MCNP_file.find(origin_start_compile_mark.search(origin_MCNP_file).group(0))
    MCCAD_start_compile_mark=re.compile(r'(.*)%s(.*)'% MCCAD_start_mark)  
    MCCAD_start_pos=MCCAD_file.find(MCCAD_start_compile_mark.search(MCCAD_file).group(0))
    MCCAD_end_compile_mark=re.compile(r'(.*)%s(.*)'% MCCAD_end_mark)  
    MCCAD_end_pos=MCCAD_file.find(MCCAD_end_compile_mark.search(MCCAD_file).group(0))    
    #print(origin_start_pos,MCCAD_start_pos,MCCAD_end_pos)
    if origin_start_pos != -1 and MCCAD_start_pos != -1 and MCCAD_end_pos!=-1 :
        origin_MCNP_file=origin_MCNP_file[:origin_start_pos]+MCCAD_file[MCCAD_start_pos:MCCAD_end_pos]+ \
            origin_MCNP_file[origin_start_pos:]
        #print(MCCAD_file[MCCAD_start_pos:MCCAD_end_pos])
        print('Successfully Replacement')
        return origin_MCNP_file
                     
    else:
        print('No Match')  


if __name__ == '__main__':
    
    origin_start_mark=['BLK CELLS start','BLK surfaces start','VOLUME Card']
    MCCAD_start_mark=['Cells Card','Surfaces Card','Materials Card']
    MCCAD_end_mark=['Void spaces','End of Surface','End of Convertion']    
    
    # get current dir
    file_dir=os.getcwd()    
    # get origin MCNP files' dir
    origin_filename = filedialog.askopenfilename(initialdir=file_dir, filetypes = (("Origin MCNP files", "*") \
                                                                                   ,("All files", "*.*") ))
    # get MCCAD_files' dir
    MCCAD_filename = filedialog.askopenfilename(initialdir=file_dir, filetypes = (("MCCAD files", "*")       \
                                                                                  ,("All files", "*.*") ))  
    if origin_filename and MCCAD_filename:
        # Open origin MCNP file
        with open(origin_filename,'r') as origin_fp:
            origin_content=origin_fp.read()
            origin_fp.close()
        # Open MCCAD_file   
        with open(MCCAD_filename, 'r') as MCCAD_fp:
            MCCAD_content=MCCAD_fp.read()
            # Modify MCCAD files to be recongnized
            surf_end_compile=re.compile(r'(.*)Materials Card(.*)')
            MCCAD_surf_end_pos=MCCAD_content.find(surf_end_compile.search(MCCAD_content).group(0)) 
            MCCAD_content=MCCAD_content[:MCCAD_surf_end_pos-1]+'c --------  End of Surface --------' + \
                '\n'+ MCCAD_content[MCCAD_surf_end_pos-1:]+'c --------  End of Convertion --------'
            MCCAD_fp.close() 
        
        for i in range(len(origin_start_mark)):
            origin_content=MCCAD_to_MCNP(origin_content,MCCAD_content,origin_start_mark[i], MCCAD_start_mark[i], MCCAD_end_mark[i])
        with open(origin_filename,'w') as origin_fp:
            origin_fp.write(origin_content)
            origin_fp.close () 
            
    else:
        messagebox.showerror('Error','OPen File Fail')        
    