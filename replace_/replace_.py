#!/usr/bin/python
# -*- coding: UTF-8 -*-
'''
This code is writen by DuHua
The main function of the program is to add the MCND file generated by MCCAD to the original model file 
2018-6-24
'''

from tkinter import filedialog, messagebox
import os.path
import re

# get current dir
file_dir=os.getcwd()

# get origin MCNP files' dir
origin_filename = filedialog.askopenfilename(initialdir=file_dir, filetypes = (("Origin MCNP files", "*")                                                        
                                                         ,("All files", "*.*") ))
# get MCCAD_files' dir
MCCAD_filename = filedialog.askopenfilename(initialdir=file_dir, filetypes = (("MCCAD files", "*")                                                        
                                                         ,("All files", "*.*") ))

if origin_filename and MCCAD_filename:
    # Open origin MCNP file
    with open(origin_filename,'r') as origin_fp:
        origin_content=origin_fp.read()
        origin_fp.close()
    # Open MCCAD_file   
    with open(MCCAD_filename, 'r') as MCCAD_fp:
        MCCAD_content=MCCAD_fp.read()
        MCCAD_fp.close()
        
    # Add Cell
    origin_cell_pos=origin_content.find('c  BLK CELLS start')
    MCCAD_cell_pos_start=MCCAD_content.find("c         Component:    NewComponent")
    cell_compile_content=re.compile(r'(.*)Void spaces(.*)')     # Look for matching content
    MCCAD_cell_pos_end=MCCAD_content.find(cell_compile_content.search(MCCAD_content).group(0))
    if origin_cell_pos != -1 and MCCAD_cell_pos_start != -1 and MCCAD_cell_pos_end !=1:
        origin_content=origin_content[:origin_cell_pos]+MCCAD_content[MCCAD_cell_pos_start:MCCAD_cell_pos_end] \
            +origin_content[origin_cell_pos:]
        # write motified contents
        with open(origin_filename,'w') as origin_fp:
            origin_fp.write(origin_content)
            origin_fp.close () 
            print('Successfully Replacement of Cell')
    else:
        print('No match Cell found')
        
        
    # Add Surface
    origin_surf_pos=origin_content.find('c  BLK surfaces start')
    surf_start_compile_content=re.compile(r'(.*)Surfaces Card(.*)')  
    MCCAD_surf_start_pos=MCCAD_content.find(surf_start_compile_content.search(MCCAD_content).group(0))
    surf_end_ompile_content=re.compile(r'(.*)Materials Card(.*)')  
    MCCAD_surf_end_pos=MCCAD_content.find(surf_end_ompile_content.search(MCCAD_content).group(0))    
    
    if origin_surf_pos != -1 and MCCAD_surf_start_pos != -1 and MCCAD_surf_end_pos !=1:
        origin_content=origin_content[:origin_surf_pos]+MCCAD_content[MCCAD_surf_start_pos \
                                                                            : MCCAD_surf_end_pos-1]\
            +origin_content[origin_surf_pos:]
        # write motified contents
        with open(origin_filename,'w') as origin_fp:
            origin_fp.write(origin_content)
            origin_fp.close () 
            print('Successfully Replacement of Surface')
    else:
        print('No match Surface found')    
   
   
    # Add Material
    origin_compile_content=re.compile(r'(.*)VOLUME Card(.*)')  
    origin_material_pos=origin_content.find(origin_compile_content.search(origin_content).group(0))
    material_start_ompile_content=re.compile(r'(.*)Materials Card(.*)')  
    MCCAD_material_start_pos=MCCAD_content.find(material_start_ompile_content.search(MCCAD_content).group(0))
    
    if origin_material_pos != -1 and MCCAD_material_start_pos != -1:
        origin_content=origin_content[:origin_material_pos]+MCCAD_content[MCCAD_material_start_pos:]+ \
            origin_content[origin_material_pos:]
        # write motified contents
        with open(origin_filename,'w') as origin_fp:
            origin_fp.write(origin_content)
            origin_fp.close () 
            print('Successfully Replacement of Material')
    else:
        print('No match Material found')      
    
else:
    messagebox.showerror('Error','OPen File Fail')

